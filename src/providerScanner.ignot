import { McpProvider } from "./store/schema";
import {
  getProviderClientTransport,
  connectProviderClient,
} from "./providerClient";

interface ProviderCheckResults {
  name: string;
  version: string;
  status: "success" | "partial" | "failed"; // Overall status of all checks
  checks: {
    connection: {
      status: "success" | "failed";
      latency?: number; // Latency in milliseconds, if applicable
      error?: string; // Error message if connection failed
    };
    capabilities: {
      status: "success" | "failed";
      data?: {
        [key: string]: any; // Flexible structure for server capabilities
      };
      error?: string; // Error message if initialize call failed
    };
    tools: {
      status: "success" | "failed";
      data?: string[] | { [key: string]: any }[]; // List of tool names or detailed tool info
      error?: string; // Error message if tools call failed
    };
  };
  errors?: string[]; // Array of top-level errors, if any
}

export async function scanProvider(provider: McpProvider) {
  const transport = await getProviderClientTransport(provider);
  //const checkResult =
  // test connection
  const providerClient = await connectProviderClient(transport);
  //const
}
